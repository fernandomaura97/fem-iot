[
    {
        "id": "5cca39a3e4021d33",
        "type": "tab",
        "label": "FLOW DEBUG TIMER HTTP",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ee75b123c0850465",
        "type": "inject",
        "z": "5cca39a3e4021d33",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "2b8ef7b2bf284318"
            ]
        ]
    },
    {
        "id": "2b8ef7b2bf284318",
        "type": "function",
        "z": "5cca39a3e4021d33",
        "name": "",
        "func": "\n\n\n//int random \nmsg.random = Math.floor((Math.random() * 5) + 1);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 300,
        "wires": [
            [
                "16adb1c7d5b9ab46"
            ]
        ]
    },
    {
        "id": "16adb1c7d5b9ab46",
        "type": "http request",
        "z": "5cca39a3e4021d33",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=E6481781DO5Q8TKE&field2={{random}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 730,
        "y": 300,
        "wires": [
            [
                "34dbc2a735e53d75"
            ]
        ]
    },
    {
        "id": "34dbc2a735e53d75",
        "type": "debug",
        "z": "5cca39a3e4021d33",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 300,
        "wires": []
    },
    {
        "id": "8791cfb685a3f344",
        "type": "http request",
        "z": "5cca39a3e4021d33",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/1688467/fields/2.json?api_key=MZKLIP9IR3IMQ14G&results=1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "71198df2c38c7814",
                "34a5afa29d71262a"
            ]
        ]
    },
    {
        "id": "0806e061f6ddc98c",
        "type": "switch",
        "z": "5cca39a3e4021d33",
        "name": "IF == \"AA0\"",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "\"AA0\\n\"",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "4d8bab3eb7d50293"
            ]
        ]
    },
    {
        "id": "17824c85451a6460",
        "type": "inject",
        "z": "5cca39a3e4021d33",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"AA0\\n\"",
        "payloadType": "json",
        "x": 230,
        "y": 440,
        "wires": [
            [
                "0806e061f6ddc98c",
                "4a83978099d05faa"
            ]
        ]
    },
    {
        "id": "4a83978099d05faa",
        "type": "debug",
        "z": "5cca39a3e4021d33",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 440,
        "wires": []
    },
    {
        "id": "71198df2c38c7814",
        "type": "trigger",
        "z": "5cca39a3e4021d33",
        "name": "T_cycle - 5s",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "55",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 970,
        "y": 600,
        "wires": [
            [
                "e7a2903d55709e94"
            ]
        ]
    },
    {
        "id": "4d8bab3eb7d50293",
        "type": "function",
        "z": "5cca39a3e4021d33",
        "name": "",
        "func": "\n\nvar counter = flow.get(\"counter\")||0;\nvar old_TSvalue = flow.get(\"oldTSvalue\") ||0;\n\ncounter += 1 ; \nnode.warn([\"Contador:\" + counter, \"OLD TS_value: \"+ old_TSvalue]);\n\nflow.set(\"counter\", counter);\n\n\n\n//flow.set(mycounter)\n/*if(mycounter == http_value){\n    \n    \n    \n}*/\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 600,
        "wires": [
            [
                "8791cfb685a3f344"
            ]
        ]
    },
    {
        "id": "e7a2903d55709e94",
        "type": "function",
        "z": "5cca39a3e4021d33",
        "name": "",
        "func": "\n\nvar n_cycles = msg.payload.feeds[0].field2;\n\n//var n_cycles = 2; //OJO!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nflow.set('oldTSvalue', n_cycles);\n\n\nvar contador = flow.get(\"counter\");\n\n\n\n\n\nnode.warn([\"DBG counter: \" + contador , \"DBG Thingspeak cycles: \" + n_cycles]);\n\n\n\nif(contador >= n_cycles)\n{\n    node.warn(\"CONDITION FULFILLED\");\n    flow.set('counter', 0);\n    msg.bitmask = 0b11111111; //once\n}\n\nelse{\n    \n    msg.bitmask = 0b00000001; //Set last nodeid to 1, so we have a sensor measuring all the time\n    \n}\n\n//msg.counter = \n\n\nmsg.cycles = n_cycles;\n\nnode.warn(\"DBG bitmask: \" + msg.bitmask);\n\n\n\nnode.error(\"END\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 600,
        "wires": [
            [
                "12891af865e7d815",
                "467d39469a6ddf79"
            ]
        ]
    },
    {
        "id": "12891af865e7d815",
        "type": "debug",
        "z": "5cca39a3e4021d33",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "bitmask",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 600,
        "wires": []
    },
    {
        "id": "34a5afa29d71262a",
        "type": "debug",
        "z": "5cca39a3e4021d33",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 840,
        "wires": []
    },
    {
        "id": "2a7d075f09bc0edb",
        "type": "function",
        "z": "5cca39a3e4021d33",
        "name": "SETUP",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nif(flow.get(\"counter\") == undefined) {\n    flow.set(\"counter\", 0);\n    \n}\n\n//var cycle_count = global.get('cycle_count')||0; \n\n\n",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "ef9c6d37fffa3bf6",
        "type": "inject",
        "z": "5cca39a3e4021d33",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 160,
        "wires": [
            [
                "e22e55aa531fc292"
            ]
        ]
    },
    {
        "id": "e22e55aa531fc292",
        "type": "change",
        "z": "5cca39a3e4021d33",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "counter",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "467d39469a6ddf79",
        "type": "change",
        "z": "5cca39a3e4021d33",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "bitmask",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 720,
        "wires": [
            [
                "1f7fce7f16b8d81b"
            ]
        ]
    },
    {
        "id": "1f7fce7f16b8d81b",
        "type": "serial out",
        "z": "5cca39a3e4021d33",
        "name": "",
        "serial": "6fff800f.c81fe",
        "x": 1610,
        "y": 720,
        "wires": []
    },
    {
        "id": "cc32dd96c3a21201",
        "type": "inject",
        "z": "5cca39a3e4021d33",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"BM,236\\n\"",
        "payloadType": "json",
        "x": 1330,
        "y": 800,
        "wires": [
            [
                "1f7fce7f16b8d81b"
            ]
        ]
    },
    {
        "id": "acaa81e79250dba5",
        "type": "serial in",
        "z": "5cca39a3e4021d33",
        "name": "",
        "serial": "6fff800f.c81fe",
        "x": 210,
        "y": 600,
        "wires": [
            [
                "0806e061f6ddc98c",
                "9a3e0bf6a0e7d4b7"
            ]
        ]
    },
    {
        "id": "9a3e0bf6a0e7d4b7",
        "type": "debug",
        "z": "5cca39a3e4021d33",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 760,
        "wires": []
    },
    {
        "id": "6fff800f.c81fe",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    }
]